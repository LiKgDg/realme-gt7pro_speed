name: realme GT7 Pro Kernel Build with SukiSU

on:
  workflow_dispatch:
    inputs:
      kernel-version:
        description: '内核版本 (如: 6.6)'
        required: true
        default: '6.6'
      architecture:
        description: '架构 (arm64/x86_64)'
        required: true
        default: 'arm64'
      gki-mode:
        description: 'GKI模式 (true/false)'
        required: true
        default: 'true'
        type: boolean
      enable-sukisu:
        description: '启用 SukiSU Ultra'
        required: true
        default: 'true'
        type: boolean
      enable-susfs:
        description: '启用 SuSFS'
        required: true
        default: 'true'
        type: boolean
      enable-zram:
        description: '启用 ZRAM'
        required: true
        default: 'true'
        type: boolean
      zram-algorithms:
        description: 'ZRAM 算法 (逗号分隔, 如: lz4,lzo)'
        required: false
        default: 'lz4,lzo'
      enable-kpm:
        description: '启用 KPM'
        required: true
        default: 'true'
        type: boolean
      enable-bbr:
        description: '启用 BBR'
        required: true
        default: 'true'
        type: boolean

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: 检出realme内核源码
        uses: actions/checkout@v4
        with:
          submodules: recursive
      
      - name: 设置环境变量
        run: |
          KERNEL_VERSION=${{ github.event.inputs.kernel-version }}
          ARCH=${{ github.event.inputs.architecture }}
          GKI_MODE=${{ github.event.inputs.gki-mode }}
          ENABLE_SUKISU=${{ github.event.inputs.enable-sukisu }}
          ENABLE_SUSFS=${{ github.event.inputs.enable-susfs }}
          ENABLE_ZRAM=${{ github.event.inputs.enable-zram }}
          ZRAM_ALGORITHMS=${{ github.event.inputs.zram-algorithms }}
          ENABLE_KPM=${{ github.event.inputs.enable-kpm }}
          ENABLE_BBR=${{ github.event.inputs.enable-bbr }}
          
          # realme高通平台配置
          if [ "$ARCH" == "arm64" ]; then
            REALME_PLATFORM="msm.sun"  # realme GT7 Pro高通平台标识
          else
            REALME_PLATFORM="x86_64"
          fi
          
          echo "KERNEL_VERSION=$KERNEL_VERSION" >> $GITHUB_ENV
          echo "ARCH=$ARCH" >> $GITHUB_ENV
          echo "GKI_MODE=$GKI_MODE" >> $GITHUB_ENV
          echo "ENABLE_SUKISU=$ENABLE_SUKISU" >> $GITHUB_ENV
          echo "ENABLE_SUSFS=$ENABLE_SUSFS" >> $GITHUB_ENV
          echo "ENABLE_ZRAM=$ENABLE_ZRAM" >> $GITHUB_ENV
          echo "ZRAM_ALGORITHMS=$ZRAM_ALGORITHMS" >> $GITHUB_ENV
          echo "ENABLE_KPM=$ENABLE_KPM" >> $GITHUB_ENV
          echo "ENABLE_BBR=$ENABLE_BBR" >> $GITHUB_ENV
          echo "REALME_PLATFORM=$REALME_PLATFORM" >> $GITHUB_ENV
      
      - name: 安装编译依赖
        run: |
          sudo apt-get update
          sudo apt-get install -y bc bison flex libssl-dev make gcc-aarch64-linux-gnu 
          sudo apt-get install -y bazel  # realme内核使用Bazel构建
          if [ "$ARCH" == "x86_64" ]; then
            sudo apt-get install -y gcc-x86-64-linux-gnu
          fi
          
          # 安装Python依赖用于Bazel构建
          sudo apt-get install -y python3 python3-pip
          pip3 install numpy six protobuf wheel
      
      - name: 集成SukiSU Ultra
        if: ${{ env.ENABLE_SUKISU == 'true' }}
        run: |
          # 创建临时目录存放SukiSU脚本
          mkdir -p sukisutemp
          cd sukisutemp
          
          # 下载SukiSU安装脚本
          curl -LSs "https://raw.githubusercontent.com/SukiSU-Ultra/SukiSU-Ultra/main/kernel/setup.sh" -o setup.sh
          chmod +x setup.sh
          
          # 集成到realme内核 (非GKI模式使用nongki分支)
          if [ "$GKI_MODE" == "true" ]; then
            ./setup.sh main
          else
            ./setup.sh nongki
          fi
          
          # 将修改应用到realme内核根目录
          cp -r kernel/* ..
          cd ..
          rm -rf sukisutemp
      
      - name: 配置SuSFS
        if: ${{ env.ENABLE_SUSFS == 'true' }}
        run: |
          # realme内核若已集成SukiSU则自动包含SuSFS
          if [ "$ENABLE_SUKISU" == "true" ]; then
            echo "SukiSU已集成SuSFS，跳过单独配置"
          else
            # 手动启用SuSFS配置
            echo "CONFIG_SUSFS=y" >> .config
            echo "CONFIG_SUSFS_FS=y" >> .config
          fi
      
      - name: 生成realme内核配置
        run: |
          # 清除旧配置
          make ARCH=$ARCH mrproper
          
          # 加载realme默认配置 (GKI模式)
          if [ "$GKI_MODE" == "true" ]; then
            if [ "$ARCH" == "arm64" ]; then
              make ARCH=arm64 $REALME_PLATFORM_defconfig
              # 应用GKI配置
              cp build.config.gki.aarch64 .config
            else
              make ARCH=x86_64 gki_x86_64_defconfig
            fi
          else
            # 非GKI模式使用allmodconfig
            if [ "$ARCH" == "arm64" ]; then
              make ARCH=arm64 allmodconfig
            else
              make ARCH=x86_64 allmodconfig
            fi
          fi
          
          # SukiSU核心配置
          if [ "$ENABLE_SUKISU" == "true" ]; then
            echo "CONFIG_KSU=y" >> 
