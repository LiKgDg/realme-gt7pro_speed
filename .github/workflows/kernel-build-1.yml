name: Manual Build RMX5090 Kernel (Android 15)

on:
  workflow_dispatch:  # 支持手动触发，可输入参数
    inputs:
      kernel_commit:
        description: '内核版本对应的commit哈希（如013ec21bba94）'
        required: true
        default: '013ec21bba94'
      build_comment:
        description: '构建备注（如测试版/稳定版）'
        required: false
        default: 'Android 15测试构建'

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - name: 显示手动输入参数
        run: |
          echo "构建内核commit: ${{ github.event.inputs.kernel_commit }}"
          echo "构建备注: ${{ github.event.inputs.build_comment }}"

      - name: 安装基础依赖
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential bc bison flex libssl-dev patch \
            gcc-aarch64-linux-gnu binutils-aarch64-linux-gnu \
            python3 python3-pip zip libelf-dev git

      - name: 拉取内核源码（手动指定版本）
        run: |
          git clone https://github.com/realme-kernel-opensource/realme_GT7pro-Speed-AndroidV-kernel-source.git kernel
          cd kernel
          git checkout ${{ github.event.inputs.kernel_commit }}  # 使用手动输入的commit
          git submodule update --init --recursive
          cd ..

      - name: 集成SukiSU Ultra（手动选择分支）
        working-directory: ./kernel
        run: |
          # 手动确认分支适配性后执行
          curl -LSs -o setup.sh https://raw.githubusercontent.com/SukiSU-Ultra/SukiSU-Ultra/main/kernel/setup.sh
          chmod +x setup.sh
          ./setup.sh main  # 手动选择main分支（适配Android 15）
          rm -f setup.sh

      - name: 内核配置（含手动确认步骤）
        working-directory: ./kernel
        run: |
          ARCH=arm64
          make ARCH=$ARCH mrproper
          cp arch/arm64/configs/vendor/sun_perf.config .config

          # 基础配置（脚本自动添加）
          echo "CONFIG_KSU=y" >> .config
          echo "CONFIG_KPROBES=y" >> .config
          echo "CONFIG_GKI=y" >> .config
          echo "CONFIG_MACH_RMX5090=y" >> .config
          echo "CONFIG_SYSTEM_SECURITY=y" >> .config
          echo "CONFIG_LTO=y" >> .config

          # 手动确认配置（通过输出.config前10行验证）
          echo "===== 配置预览（前10行） ====="
          head -n 10 .config
          echo "===== 请确认以上配置正确 ====="

          # 保存配置
          make ARCH=$ARCH savedefconfig
          cp defconfig .config

      - name: 编译内核（显示实时进度）
        working-directory: ./kernel
        run: |
          export ARCH=arm64
          export CROSS_COMPILE=aarch64-linux-gnu-
          export PATH=$PATH:/usr/bin:/usr/local/bin
          
          # 显示编译命令并执行
          echo "开始编译：make -j$(nproc) LD=ld.lld"
          make -j$(nproc) LD=ld.lld | tee build.log  # 保存日志便于调试
          
          # 手动验证编译结果
          echo "===== 编译结果验证 ====="
          ls -lh arch/arm64/boot/Image || { echo "编译失败：未生成Image"; exit 1; }

      - name: 打包AnyKernel3（手动配置机型信息）
        run: |
          git clone https://github.com/osm0sis/AnyKernel3 anykernel
          cp ./kernel/arch/arm64/boot/Image ./anykernel/zImage
          
          # 手动定义机型和版本信息
          cat > ./anykernel/properties << EOF
          kernel.string=RMX5090 Kernel (${{ github.event.inputs.build_comment }})
          do.devicecheck=1
          device.name1=RMX5090
          device.name2=GT7ProSpeed
          supported.versions=15
          kernel.version=6.6.30-android15-8-g${{ github.event.inputs.kernel_commit }}
          EOF
          
          # 打包并显示路径
          cd anykernel
          zip -r9 ../RMX5090-kernel-${{ github.sha }}.zip * -x .git README.md
          echo "打包完成：$(pwd)/../RMX5090-kernel-${{ github.sha }}.zip"

      - name: 上传构建产物（手动下载）
        uses: actions/upload-artifact@v4
        with:
          name: rmx5090-android15-kernel-${{ github.run_number }}
          path: |
            RMX5090-kernel-*.zip
            kernel/build.log  # 附带编译日志便于调试

      - name: 构建完成提示
        run: |
          echo "手动构建流程完成！"
          echo "产物已上传至Artifacts，可下载后刷入RMX5090设备（Android 15）"
